#!/usr/bin/env python3
# This file is placed in the Public Domain.
# pylint: disable=C0115,C0116,R0201,C0413


"operator daemon"


import importlib
import os
import queue
import readline
import socket
import sys
import time
import textwrap
import threading
import _thread


sys.path.insert(0, os.getcwd())


from opd import Class, Default, Object, Wd
from opd import edit, keys, launch, last, locked, printable, register, save
from opd import Bus, Command, Event, Handler, Shell, command, scan, scandir
from opd import cmds, irc, rss

from opd.irc import IRC
from opd.rss import Fetcher


Wd.workdir = os.path.expanduser("~/.opd")


starttime = time.time()


class CLI(Handler):

    def raw(self, txt):
        print(txt)


class Shell(Handler):

    def loop(self):
        while 1:
            self.handle(self.poll())

    def poll(self):
        event = Event()
        event.bot = self
        event.txt = input("> ")
        event.orig = repr(self)
        return event

    def raw(self, txt):
        print(txt)

    def start(self):
        launch(self.loop)

    def wait(self):
        while 1:
            time.sleep(1.0)


cli = CLI()
shl = Shell()
fetcher = Fetcher()
irc = IRC()


def banner():
    print("OPD (operator daemon) started at %s" % time.ctime(time.time()).replace("  ", " "))
    print(printable(irc.cfg, skip="password,username,realname"))



def importer(packagename, modulename):
    name = "%s.%s" % (packagename, modulename)
    try:
        mod = importlib.import_module(name, packagename)
        scan(cli, mod)
    except ModuleNotFoundError:
        pass


def main():
    scandir("mod", importer)
    if len(sys.argv) > 1:
        return command(cli, " ".join(sys.argv[1:]))
    banner()
    irc.start()
    scan(irc, cmds)
    scan(irc, rss)
    fetcher.start()
    shl.start()
    scan(shl, cmds)
    scan(shl, rss)
    shl.wait()


if __name__ == "__main__":
    main()
